<%namespace file="../sign_base.mcftmpl" import="*"/>

<%def name="load_biome(renderer, biome, handback=None)">
%for i in range(0, 4):
${renderer(biome, 'execute at @e[tag=biome_loading_action_home] run', i + 4, 32 * int(i / 2), 33, 32 * int(i % 2), handback)}
%endfor
%for i in range(0, 4):
${renderer(biome, 'execute at @e[tag=biome_loading_action_home] run', i, 32 * int(i / 2),  1, 32 * int(i % 2), handback)}
%endfor
</%def>

<%def name="group_signs(group)">
${categories()}

<% x = list(biome_groups.keys()).index(group) %>
%for biome in list(biome_groups[group]):
setblock ~${6 - loop.index - x} ~0 ~6 birch_wall_sign{\
${sign_nbt(0, 'function restworld:biomes/clear_biome', '', raised=False, name='biome_loading')},\
${sign_nbt(1, 'scoreboard players set load_biome funcs %d' % biomes.index(biome), biome, raised=False, name='biome_loading')},\
${sign_nbt(2, 'function restworld:biomes/load_biome_cur', '', raised=False, name='biome_loading')},\
${sign_nbt(3, 'function restworld:biomes/cleanup_biome', '', raised=False, name='biome_loading')},\
}
%endfor

setblock ~${6 - x} ~1 ~6 birch_wall_sign{${sign_nbt(1, 'execute at @e[tag=category_home] run function restworld:biomes/category', group, name='category')},Text3:${text("Biomes")}}
</%def>

<%def name="trigger(biome, prefix, i, x, y, z, handback)">
setblock ~${x} ~${y - 1} ~${z} redstone_torch
setblock ~${x} ~${y - 1} ~${z} air
</%def>

<%def name="illuminate(biome, prefix, i, x, y, z, handback)">
execute if score biome_illumate funcs matches 1 run fill ~${x} ~${y + 1} ~${z} ~${x + 31} ~${y + 32} ~${z + 31} light replace #restworld:air
execute unless score biome_illumate funcs matches 1 run fill ~${x} ~${y + 1} ~${z} ~${x + 31} ~${y + 32} ~${z + 31} air replace light
</%def>

<%def name='category_sign(category, x)'>
<% biomes =  biome_groups[category] %>
<% text3 = '' if category == 'Structures' else 'Biomes' %>
setblock ~${x} ~1 ~6 oak_wall_sign{Text2:${text(category)},${sign_nbt(2, 'execute at @e[tag=category_home] run function restworld:biomes/%s_signs' % Thing(category).id, text3, name='category')}} replace
</%def>

<%def name="categories()">
fill ~6 ~0 ~6 ~-6 ~0 ~6 air
%for group in biome_groups:
${category_sign(group, 6 - loop.index)}
%endfor
</%def>
