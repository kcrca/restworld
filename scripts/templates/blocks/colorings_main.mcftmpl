<%namespace name="base" file="../base.mcftmpl"/>
<%namespace import="*" file="blocks_base.mcftmpl"/>

<% fill = 'fill ~1 ~2 ~6 ~-11 ~4 ~-1' %>

<%base:loop collection="${colors}" args="when,i,thing">
%for which in ('stained_glass', 'stained_glass_pane', 'wool', 'banner', 'shulker_box', 'carpet', 'concrete', 'concrete_powder', 'terracotta', 'candle_cake[lit=true]', 'candle[candles=1]', 'candle[candles=2]', 'candle[candles=3]', 'candle[candles=4]'):
<% state = '[rotation=2]' if which == 'banner' else '' %>\
${when(i)} ${fill} ${thing.full_id()}_${which}${state} replace #restworld:${which}
%endfor

${when(i)} data merge block ~-7 ~0 ~3 {name:"${'restworld:%s_terra' % thing.id}"}

%if i == 0:
fill ~-9 ~2 ~2 ~-9 ~2 ~3 air
%endif

${when(i)} setblock ~-9 ~2 ~2 ${thing.full_id()}_bed[facing=north,part=head]
${when(i)} setblock ~-9 ~2 ~3 ${thing.full_id()}_bed[facing=north,part=foot]

${when(i)} data merge entity @e[tag=${var}_item_frame,limit=1] {Item:{id:${thing.dye_name()}},Count:1,ItemRotation:0}

${when(i)} data merge entity @e[tag=${var}_armor_stand,limit=1] {ArmorItems:[{id:leather_boots,Count:1,tag:{Variant:2,display:{color:${thing.rgb}}}},{id:leather_leggings,Count:1,tag:{Variant:2,display:{color:${thing.rgb}}}},{id:leather_chestplate,Count:1,tag:{Variant:2,display:{color:${thing.rgb}}}},{id:leather_helmet,Count:1,tag:{Variant:2,display:{color:${thing.rgb}}}}]}
${when(i)} data merge entity @e[tag=${var}_horse,limit=1] {ArmorItem:{id:leather_horse_armor,Count:1,tag:{display:{color:${thing.rgb}}}}}
${when(i)} data merge entity @e[tag=${var}_llama,limit=1] {DecorItem:{id:${thing.id}_carpet,Count:1}}
${when(i)} data merge entity @e[tag=${var}_sheep,limit=1] {Color:${i}}

${when(i)} data merge block ~-4 ~2 ~4 {Text2:${text(thing.name)}}
${when(i)} execute as @e[tag=${var}_names] run data merge entity @s {CustomName:"\"${thing.name}\""}

${when(i)} data merge block ~0 ~0 ~-1 {name:"${'restworld:%s_terra' % thing.in_id()}"}
${when(i)} data merge block ~1 ~2 ~-0 {Text1:${text(thing.name)}}

setblock ~0 ~-1 ~-1 redstone_torch
setblock ~0 ~-1 ~-1 air

<%def name="render_signs(x, y, z, color, wood, when, i, thing)">
${when(i)} data merge block ~${x} ~${y} ~${z} {Color:${color.id},Text3:${text(color.name)}}
</%def>
${colored_signs(thing, render_signs, when, i, thing)}

%if i == len(colors) - 1:
setblock ~-7 ~-1 ~3 redstone_torch
setblock ~-7 ~-1 ~3 air
%endif
</%base:loop>
