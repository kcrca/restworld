<%namespace name="base" file="../base.mcftmpl"/>
<%namespace import="*" file="blocks_base.mcftmpl"/>

<%
    import re

    fill = 'fill ~1 ~4 ~6 ~-11 ~2 ~-1'
    fills = ('stained_glass', 'stained_glass_pane', 'wool', 'banner', 'shulker_box', 'carpet', 'concrete', 'concrete_powder', 'terracotta')
    plain_fills = ('glass', 'glass_pane', 'air', 'air', 'shulker_box', 'air', 'air', 'air', 'terracotta')
    candles = ['candle[candles=%d,lit=true]' % x for x in range(1, 5)]
    candles.append(('candle_cake[lit=true]'))
    colorings = colors + (Thing('Plain'),)
    coords = tuple(int(x[1:]) for x in fill.split()[1:])
%>

<%def name="render_signs_glow(x, y, z, color, wood, when, i, thing)">\
execute if score lit_signs funcs matches 0 run data merge block ~${x} ~${y} ~${z} {GlowingText:false,Text4:${text("Text")}}
execute if score lit_signs funcs matches 1 run data merge block ~${x} ~${y} ~${z} {GlowingText:true,Text4:${text("Glowing Text")}}
</%def>

<%base:loop collection="${colorings}" args="when,i,thing">
<% is_plain = thing.name == 'Plain' %>

%if is_plain:
${when(i)} execute if data entity @e[tag=colorings_llama,limit=1] DecorItem run clone ~${coords[0]} ~${coords[1]} ~${coords[2]} ~${coords[3]} ~${coords[4] - 1} ~${coords[5]} ~${coords[3]} 0 ~${coords[5]}
%elif i == 0:
execute if score ${var} funcs matches 0..${len(colorings) - 2} unless data entity @e[tag=colorings_llama,limit=1] DecorItem run clone ~${coords[0]} ${coords[1] - coords[4] + 1} ~${coords[2]} ~${coords[3]} 0 ~${coords[5]} ~${coords[3]} ~${coords[4] - 1} ~${coords[5]}
%endif

%for which in fills:
<%
    state = '[rotation=2]' if which == 'banner' else ''
    if is_plain:
	filler = plain_fills[loop.index]
    else:
	filler = "%s_%s%s" % (thing.full_id(), which, state)
%>\
${when(i)} ${fill} ${filler} replace #restworld:${which}
%endfor
%for which in list(candles):
<%
    candle = '' if is_plain else '%s_' % thing.full_id()
%>
${when(i)} execute if score lit_candles funcs matches 0 run ${fill} ${candle}${which.replace('true', 'false')} replace #restworld:${re.sub(',?lit=true', '', which)}
${when(i)} execute if score lit_candles funcs matches 1 run ${fill} ${candle}${which} replace #restworld:${re.sub(',?lit=true', '', which)}
%endfor

${when(i)} data merge block ~-7 ~0 ~3 {name:"${'restworld:%s_terra' % thing.id}"}

%if i == 0:
fill ~-9 ~2 ~2 ~-9 ~2 ~3 air
%endif

%if is_plain:
${when(i)} data merge entity @e[tag=${var}_item_frame,limit=1] {Item:{id:stone,Count:0},ItemRotation:0}
%else:
${when(i)} setblock ~-9 ~2 ~2 ${thing.full_id()}_bed[facing=north,part=head]
${when(i)} setblock ~-9 ~2 ~3 ${thing.full_id()}_bed[facing=north,part=foot]
${when(i)} data merge entity @e[tag=${var}_item_frame,limit=1] {Item:{id:${thing.dye_name()},Count:1},ItemRotation:0}
%endif


<%
if is_plain:
    leather_color = ''
    horse_leather_color = ''
    llama_decor = 'Count:0'
    sheep_nbt = 'Sheared:True'
else:
    leather_color = ',tag:{Variant:2,display:{color:%s}}' % thing.rgb
    horse_leather_color = ',tag:{display:{color:%s}}' % thing.rgb
    llama_decor = 'id:%s_carpet,Count:1' % thing.id
    sheep_nbt = 'Color:%d,Sheared:False' % i
cnt = 0
%>
%if is_plain:
${when(i)} ${base.remove("tag=%s_horse" % var)}
${when(i)} summon horse ~1.2 ~2 ~4.8 {Variant:5,Tags:[${var}_horse,${var}_item,${var}_names],ArmorItem:{id:leather_horse_armor,Count:1},Rotation:[30f,0f],Tame:true,NoAI:true,Silent:true}
%endif
${when(i)} data merge entity @e[tag=${var}_armor_stand,limit=1] {ArmorItems:[{id:leather_boots,Count:1${leather_color}},{id:leather_leggings,Count:1${leather_color}},{id:leather_chestplate,Count:1${leather_color}},{id:leather_helmet,Count:1${leather_color}}]}
${when(i)} data merge entity @e[tag=${var}_horse,limit=1] {ArmorItem:{id:leather_horse_armor,Count:1${horse_leather_color}}}
${when(i)} data merge entity @e[tag=${var}_llama,limit=1] {DecorItem:{${llama_decor}}}
${when(i)} data merge entity @e[tag=${var}_sheep,limit=1] {${sheep_nbt}}

${when(i)} data merge block ~-4 ~2 ~4 {Text2:${text(thing.name)}}
${when(i)} execute as @e[tag=${var}_names] run data merge entity @s {CustomName:"\"${thing.name}\""}

${when(i)} data merge block ~0 ~0 ~-1 {name:"${'restworld:%s_terra' % 'plain' if is_plain else thing.in_id()}"}
${when(i)} data merge block ~1 ~2 ~-0 {Text1:${text(thing.name)}}

setblock ~0 ~-1 ~-1 redstone_torch
setblock ~0 ~-1 ~-1 air

<%def name="render_signs(x, y, z, color, wood, when, i, thing)">
${when(i)} data merge block ~${x} ~${y} ~${z} {Color:${color.id},Text3:${text(color.name)}}
</%def>
${colored_signs(thing, render_signs, when, i, thing)}

%if i == len(colorings) - 1:
setblock ~-7 ~-1 ~3 redstone_torch
setblock ~-7 ~-1 ~3 air
${colored_signs(thing, render_signs_glow)}
%endif
</%base:loop>
