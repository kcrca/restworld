<%namespace name="base" file="../base.mcftmpl"/>

<%def name="blocks(collection, *others, **kwargs)">${do_blocks((collection,) + others, **kwargs)}</%def>
<%def name="do_blocks(collection, sign=-1, dx=0, dz=0, size=0, destroy=False)">
<%base:loop collection="${collection[0]}" args="when,i,thing">\
<%
  x = z = 0
  x_size = 0
%>\
%for c in collection:
<%
    if isinstance(c[i], Thing):
	t = c[i]
    else:
	t = Thing(c[i])
    lines = t.to_sign_text()
    signage = ()
    for j in range(0, 3):
	txt = lines[j] if j < len(lines) else ""
	signage += ("Text%d:%s" % (j + 2, text(txt)),)
    try:
	nbt = "{%s}" % t.nbt
    except AttributeError:
	nbt = ""
%>
%if destroy:
    ${when(i)} setblock ~${x} ~3 ~${z} air destroy
%endif
${when(i)} setblock ~${x} ~3 ~${z} ${t.full_id()}${nbt}${" destroy" if destroy else ""}
${when(i)} data merge block ~${x} ~2 ~${z + sign} {${",".join(signage)}}
<%
    x += dx
    x_size += 1
    if size == 0:
	z += dz
    elif x_size >= size:
	x = 0
	z += dz
	x_size = 0
%>\
%endfor
</%base:loop>
</%def>\

<%def name="colored_signs(color, render, when=None, i=None, thing=None)">
<% color_split = len(woods + stems) / 2 %>
%for wood in woods + stems:
${render(-12 + int(loop.index % color_split), 2 + int(loop.index / color_split), 3 - int(loop.index % color_split), color, Thing(wood), when, i, thing)}
%endfor
</%def>
