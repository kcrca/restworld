<%namespace name="base" file="../base.mcftmpl"/>\

<%!

import re

blocks = (
    "Acacia Planks",
    "Birch Planks",
    "Jungle Planks",
    "Oak Planks",
    "Dark Oak Planks",
    "Spruce Planks",
    "Cobblestone",
    "Mossy|Cobblestone",
    "Bricks",
    "Stone Bricks",
    "Mossy|Stone Bricks",
    "Nether Bricks",
    "Red|Nether Bricks",
    "End Stone Bricks",
    "Purpur Block",
    "Sandstone",
    "Smooth|Sandstone",
    "Red|Sandstone",
    "Smooth Red|Sandstone",
    "Prismarine",
    "Prismarine|Bricks",
    "Dark|Prismarine",
    "Andesite",
    "Polished|Andesite",
    "Diorite",
    "Polished|Diorite",
    "Granite",
    "Polished|Granite",
    "Quartz Block",
    "Smooth|Quartz"
)
stairs = tuple(re.sub("(marine|ite)$", r"\1 Stairs", re.sub("stone$", "stone Stairs", f.replace("Planks", "Stairs").replace("Bricks", "Brick Stairs").replace( "Block", "Stairs").replace("|Quartz", " Quartz Stairs"))) for f in blocks)
slabs = tuple(f.replace("Stairs", "Slab") for f in stairs)
%>
<%base:loop collection="${blocks}" args="when,i,thing">

<% fill = 'fill ~0 ~2 ~0 ~5 ~6 ~4' %>\
<% pl, sl, st = Thing(thing), Thing(slabs[i]), Thing(stairs[i]) %>\
${when(i)} ${fill} ${pl.full_id()} replace #restworld:stepable_planks
${when(i)} ${fill} ${sl.full_id()}[type=double] replace #restworld:stepable_slabs[type=double]
%for t in ("top", "bottom"):
${when(i)} ${fill} ${sl.full_id()}[type=${t}] replace #restworld:stepable_slabs[type=${t}]
%for f in ("north", "east", "west", "south"):
${when(i)} ${fill} ${st.full_id()}[half=${t},facing=${f}] replace #restworld:stepable_stairs[half=${t},facing=${f}]
%for s in ("inner_left", "inner_right", "outer_left", "outer_right"):
${when(i)} ${fill} ${st.full_id()}[half=${t},facing=${f},shape=${s}] replace #restworld:stepable_stairs[half=${t},facing=${f},shape=${s}]
%endfor
%endfor
%endfor
<%
    sign_text = thing.strip().split('|')
    if len(sign_text) == 1:
	sign_text = ("", sign_text[0])
%>
${when(i)} data merge block ~0 ~2 ~-1 {Text1:${text(re.sub(r" [^ ]*$", "", sign_text[0]))}, Text2:${text(re.sub(r" [^ ]*$", "", sign_text[1]))}}

</%base:loop>
