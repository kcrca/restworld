<%namespace name="base" file="../base.mcftmpl"/>
<%namespace file="../sign_base.mcftmpl" import="*"/>

## This is NOT intended to be run on the clock. It is only called "_main" because that gives us a
## "_cur" function, which is useful when paging through the signs. Do not create the _home armor stand.

<%def name="arena_sign(y, z, hunter, victim, hunter_nbt=None, victim_nbt=None, wet=False, when=None, i=None)">
<%
nbts = {
    'Vindicator': 'Johnny:True,HandItems:[{id:iron_axe,Count:1},{}]',
    'Pillager': 'HandItems:[{id:crossbow,Count:1},{}]',
    'Drowned': 'HandItems:[{id:trident,Count:1}]',
    'Wither Skeleton': 'HandItems:[{id:stone_sword,Count:1},{}]',
    'Piglin': 'IsImmuneToZombification:True,HandItems:[{id:golden_sword,Count:1},{}]',
    'Skeleton': 'HandItems:[{id:bow,Count:1}],ArmorItems:[{id:iron_boots,Count:1,tag:{RepairCost:1,Enchantments:[{lvl:9,id:protection}]}},{},{},{}]',
    'Stray': 'HandItems:[{id:bow,Count:1}],ArmorItems:[{id:iron_boots,Count:1,tag:{RepairCost:1,Enchantments:[{lvl:9,id:protection}]}},{},{},{}]',
    'Piglin Brute': 'HandItems:[{id:golden_axe,Count:1}],IsImmuneToZombification:True',
    'Goat': 'IsScreamingGoat:True',
    'Hoglin': 'IsImmuneToZombification:True',
    'Zombified Piglin': 'HandItems:[{id:golden_sword,Count:1}]',
    'Panda': 'MainGene:aggressive',
    'Phantom': 'AX:1000,AY:110,AZ:-1000',
}
hunter_nbt = nbts.get(hunter, None)
victim_nbt = nbts.get(victim, None)
hunter_cmd = 'execute if score hunter_count funcs < arena_count funcs at @e[tag=hunter_home] run summon %s ~0 ~2 ~0 {Tags:[battler,hunter]%s}' % (Thing(hunter).id, ',%s' % hunter_nbt if hunter_nbt else '')
victim_cmd = 'execute if score victim_count funcs < arena_count funcs at @e[tag=victim_home] run summon %s ~0 ~2 ~0 {Tags:[battler,victim]%s}' % (Thing(victim).id, ',%s' % victim_nbt if victim_nbt else '')
vs = 'vs.'
if hunter == 'Peace':
    hunter_cmd = victim_cmd = vs = ''
%>
${when(i)} setblock ~-2 ~${y} ~${z} air
${when(i)} setblock ~-2 ~${y} ~${z} oak_wall_sign[facing=east]{\
    ${sign_nbt(0, 'execute at @e[tag=monitor_home] run fill ~-12 ~4 ~-12 ~12 ~2 ~12 %s' % ('water' if wet else 'air'), '', name='controls')},\
    ${sign_nbt(1, 'execute at @e[tag=monitor_home] run data merge block ~2 ~0 ~0 {Command:"%s"}' % hunter_cmd, hunter, name='controls')},\
    ${sign_nbt(2, 'execute at @e[tag=monitor_home] run data merge block ~3 ~0 ~0 {Command:"%s"}' % victim_cmd, vs, name='controls')},\
    ${sign_nbt(3, 'function restworld:arena/start_battle', victim, name='controls')}\
}
</%def>
<%
import sys

row_length = 5
battles = (
    ('Vindicator', 'Iron Golem'),
    ('Pillager', 'Snow Golem'),
    ('Illusioner', 'Snow Golem'),
    ('Evoker', 'Iron Golem'),
    ('Vex', 'Snow Golem'),
    ('Drowned', 'Snow Golem'),
    ('Wither Skeleton', 'Piglin'),
    ('Skeleton', 'Iron Golem'),
    ('Shulker', 'Snow Golem'),
    ('Stray', 'Iron Golem'),
    ('Wither', 'Pillager'),
    ('Blaze', 'Snow Golem'),
    ('Piglin Brute', 'Vindicator'),
    ('Witch', 'Snow Golem'),
    ('Wolf', 'Sheep'),
    ('Goat', 'Sheep'),
    ('Fox', 'Chicken'),
    ('Ocelot', 'Chicken'),
    ('Cat', 'Rabbit'),
    ('Ravager', 'Iron Golem'),
    ('Polar Bear', 'Vindicator'),
    ('Hoglin', 'Vindicator'),
    ('Zoglin', 'Vindicator'),
    ('Zombified Piglin', 'Vindicator'),
    ('Panda', 'Vindicator'),
    ('Spider', 'Snow Golem'),
    ('Cave Spider', 'Snow Golem'),
    ('Phantom', 'Rabbit'),
    ('Parrot', 'Vindicator'),
    ('Axolotl', 'Drowned'),
)
if len(battles) % row_length != 0:
    sys.stderr.write('Row length (%d) is not a multiple of battle count (%d)\n' % (row_length, len(battles)))
    sys.exit(1)

chunks = []
for i in range(0, len(battles), row_length):
    chunks.append(battles[i:i + row_length])

peace = ('Peace', ''),

num_pages = int(len(battles) / row_length)
end = int(row_length / 2) + 1
x = -2
%>

fill ~${x} ~2 ~${-end} ~${x} ~2 ~${end} air

<%base:loop collection="${chunks}" args="when,i,thing">\
%for which_dir in (-1, 1):
<%
    to = (i + which_dir + num_pages) % num_pages
    text, z = ('<--', +end) if which_dir == -1 else ('-->', -end)
%>\
${when(i)} setblock ~${x} ~2 ~${z} oak_wall_sign[facing=east]{GlowingText:True,\
${sign_nbt(1, 'scoreboard players set %s funcs %d' % (var, to), text)},\
${sign_nbt(2, 'execute at @e[tag=controls_home] run function restworld:%s/%s_cur' % (room, var), '')}}
%endfor\

%for s in range(0, row_length):
<% args = thing[s] + (None,) * (4 - len(thing[s])) %>\
${arena_sign(2, end - 1 - s, args[0], args[1], hunter_nbt=args[2], victim_nbt=args[3], wet=args[0] == 'Axolotl', when=when, i=i)}
%endfor
</%base:loop>
