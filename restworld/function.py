import datetime
import os
from pathlib import Path


class Loop:
    def __init__(self, items):
        self.items = items
        self.before = []
        self.body = []
        self.after = []

    def before(self, *commands: any):
        self.before.append(str(x) for x in commands)

    def body(self, *commands: any):
        self.body.append(str(x) for x in commands)

    def after(self, *commands: any):
        self.after.append(str(x) for x in commands)

    def run(self):
        


class Function:
    def __init__(self, name: Path, *commands: any):
        self.name = name
        self.commands = []
        self.add(*commands)

    def __str__(self):
        return self._warning() + '\n'.join(self.commands)

    def add(self, *commands: any):
        self.commands += (str(x) for x in commands)

    def _warning(self):
        return '# Generated by %s @ %s\n' % (os.getlogin(), datetime.datetime.now())


class Library:
    def __init__(self, path: Path, pack: str):
        self.top = path / pack / 'data' / pack / 'functions'
        self._functions = []

    def add(self, *functions: Function):
        self._functions.append(*functions)

    def save(self, *functions: Function):
        for f in functions:
            path = self.top / f.name.with_suffix('.mcfunction')
            parent = path.parent
            parent.mkdir(parents=True, exist_ok=True)
            with open(path) as f:
                f.write(str(f))
